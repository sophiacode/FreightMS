<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.freight.ms.dao.ExchangeMapper">
  <resultMap id="BaseResultMap" type="com.freight.ms.model.Exchange">
    <!--
      @MBG Generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="receiver_name" jdbcType="VARCHAR" property="receiverName" />
    <result column="receiver_telephone" jdbcType="VARCHAR" property="receiverTelephone" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      @MBG Generated
    -->
    id, user_id, user_type, goods_id, receiver_name, receiver_telephone, receiver_address, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      @MBG Generated
    -->
    select 
    <include refid="Base_Column_List" />
    from exchange
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByGoodsId" parameterType="java.lang.Integer" resultMap="BaseResultMap">

    select
    <include refid="Base_Column_List" />
    from exchange
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      @MBG Generated
    -->
    delete from exchange
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.freight.ms.model.Exchange">
    <!--
      @MBG Generated
    -->
    insert into exchange (id, user_id, user_type, 
      goods_id, receiver_name, receiver_telephone, 
      receiver_address, create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{receiverName,jdbcType=VARCHAR}, #{receiverTelephone,jdbcType=VARCHAR}, 
      #{receiverAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.freight.ms.model.Exchange">
    <!--
      @MBG Generated
    -->
    insert into exchange
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="receiverName != null">
        receiver_name,
      </if>
      <if test="receiverTelephone != null">
        receiver_telephone,
      </if>
      <if test="receiverAddress != null">
        receiver_address,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="receiverName != null">
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverTelephone != null">
        #{receiverTelephone,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null">
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.freight.ms.model.Exchange">
    <!--
      @MBG Generated
    -->
    update exchange
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="receiverName != null">
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverTelephone != null">
        receiver_telephone = #{receiverTelephone,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null">
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.freight.ms.model.Exchange">
    <!--
      @MBG Generated
    -->
    update exchange
    set user_id = #{userId,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      receiver_name = #{receiverName,jdbcType=VARCHAR},
      receiver_telephone = #{receiverTelephone,jdbcType=VARCHAR},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getDriverPoint" resultType="Integer">
    select ifnull(sum(point),0) from goods
    where id in
    (select goods_id from exchange
    <where>
      user_type = 1

      <if test="startTime != null and startTime != ''">
        and create_time &gt;= CONCAT(#{startTime},' 00:00:00')
      </if>

      <if test="endTime != null and endTime != ''">
        and create_time &lt;= CONCAT(#{endTime},' 23:59:59')
      </if>
    </where>
    )
  </select>

  <select id="getConsignorPoint" resultType="Integer">
    select ifnull(sum(point),0) from goods
    where id in
    (select goods_id from exchange
    <where>
      user_type = 2

      <if test="startTime != null and startTime != ''">
        and create_time &gt;= CONCAT(#{startTime},' 00:00:00')
      </if>

      <if test="endTime != null and endTime != ''">
        and create_time &lt;= CONCAT(#{endTime},' 23:59:59')
      </if>
    </where>
    )
  </select>
</mapper>