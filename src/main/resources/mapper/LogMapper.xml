<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.freight.ms.dao.LogMapper">
  <resultMap id="BaseResultMap" type="com.freight.ms.model.Log">
    <!--
      @MBG Generated
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="operation" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="message" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      @MBG Generated
    -->
    id, type, operation, username, status, message, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      @MBG Generated
    -->
    select 
    <include refid="Base_Column_List" />
    from log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      @MBG Generated
    -->
    delete from log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.freight.ms.model.Log" keyProperty="id" useGeneratedKeys="true">
    <!--
      @MBG Generated
    -->
    insert into log (id, type, operation, 
      username, status, message, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{operation,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, 
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.freight.ms.model.Log">
    <!--
      @MBG Generated
    -->
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="operation != null">
        operation,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="message != null">
        message,
      </if>
      create_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.freight.ms.model.Log">
    <!--
      @MBG Generated
    -->
    update log
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.freight.ms.model.Log">
    <!--
      @MBG Generated
    -->
    update log
    set type = #{type,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCount" resultType="Integer">
    select count(*) from log;
  </select>

  <select id="selectByParams" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from log
    <where>
      <if test="type != null and type != ''">
        and type = #{type,jdbcType=VARCHAR}
      </if>

      <if test="operation != null and operation != ''">
        and operation = #{operation,jdbcType=VARCHAR}
      </if>

      <if test="username != null and username != ''">
        and username = #{username,jdbcType=VARCHAR}
      </if>

      <if test="status != null and status != ''">
        and status = #{status,jdbcType=INTEGER}
      </if>

      <if test="createStartTime != null and createStartTime != ''
            and (createEndTime == null or createEndTime == '')">
        and create_time &gt;= CONCAT(#{createStartTime},' 00:00:00')
      </if>

      <if test="(createStartTime == null or createStartTime == '')
            and createEndTime != null and createEndTime != ''">
        and create_time &lt;= CONCAT(#{createEndTime},' 23:59:59')
      </if>
    </where>
    order by id
    LIMIT #{offset},#{limit}
  </select>
</mapper>